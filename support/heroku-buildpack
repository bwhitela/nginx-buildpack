#!/usr/bin/env bash

# ------------------------------------------------------------------------------------------------
# Copyright 2013 Jordon Bedwell.
# Apache License.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
# except  in compliance with the License. You may obtain a copy of the License at:
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the
# License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions
# and  limitations under the License.
# ------------------------------------------------------------------------------------------------
# The following gist was referenced to enhance this build script:
# https://gist.github.com/rjeczalik/7057434#file-building-static-nginx-txt
# ------------------------------------------------------------------------------------------------

buildpack_root=$PWD

# ------------------------------------------------------------------------------------------------

buildpack_openssl_download=https://www.openssl.org/source/openssl-1.0.1g.tar.gz
buildpack_pcre_download=ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.35.tar.gz

# ------------------------------------------------------------------------------------------------

buildpack_nginx_download=http://nginx.org/download/nginx-1.6.0.tar.gz
buildpack_nginx_build_flags=(
  --prefix=/
#  --with-cc-opt="-static -static-libgcc"
#  --with-ld-opt="-static"
  --with-cpu-opt=generic
  --with-pcre=./pcre-8.35
  --with-mail
  --with-ipv6
  --with-poll_module
  --with-select_module
  --with-rtsig_module
  --with-select_module
  --with-poll_module
  --with-http_ssl_module
  --with-http_spdy_module
  --with-http_realip_module
  --with-http_addition_module
  --with-http_sub_module
  --with-http_dav_module
  --with-http_flv_module
  --with-http_mp4_module
  --with-http_gunzip_module
  --with-http_gzip_static_module
  --with-http_auth_request_module
  --with-http_random_index_module
  --with-http_secure_link_module
  --with-http_degradation_module
  --with-http_stub_status_module
  --with-mail
  --with-mail_ssl_module
  --with-openssl=./openssl-1.0.1g
)

# ------------------------------------------------------------------------------------------------

function buildpack_exit()
{
  echo $1
  exit $2 || 1
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack download
# ------------------------------------------------------------------------------------------------

function buildpack_download()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  mkdir -p $buildpack_root/sources
  cd $buildpack_root/sources

  if curl -s $buildpack_nginx_download |tar xzv
  then
    # Puts PCRE into the NGINX folder so it uploads yo.
    curl -s $buildpack_pcre_download |tar xzv -C $nginx
    # Puts OpenSSL into the NGINX folder so it uploads. Is this needed?
    curl -s $buildpack_openssl_download |tar xzv -C $nginx
  fi
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack dependencies
# ------------------------------------------------------------------------------------------------

function buildpack_dependencies()
{
  yum install libxslt-devel libxml2-static zlib-static pcre-static bzip2-devel openssl-static gcc gcc-c++ perl
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack build
# ------------------------------------------------------------------------------------------------

function buildpack_build()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  cd $buildpack_root/sources/$nginx
  mkdir -p $buildpack_root/builds
  ./configure ${buildpack_nginx_build_flags[*]}
  make -j1 install DESTDIR=$buildpack_root/builds/$nginx
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack setup
# ------------------------------------------------------------------------------------------------

function buildpack_setup()
{
  nginx=$(basename ${buildpack_nginx_download%.tar.gz})
  mkdir -p $buildpack_root/builds
  cd $buildpack_root/builds

  [[ -d $nginx ]] || buildpack_exit "No"
  chmod -R uog+rx $nginx/sbin
  rm -rf $nginx/html
  rm -rf $nginx/conf
  rm -rf $nginx/logs
  cp -R $buildpack_root/conf $nginx
  cp -R $buildpack_root/logs $nginx
  tar czvf $nginx.tar.gz $nginx --transform s/^$nginx/nginx/ --owner=0 --group=0 && rm -rf $nginx
}

# ------------------------------------------------------------------------------------------------
# $~: heroku-buildpack cleanup
# ------------------------------------------------------------------------------------------------

function buildpack_cleanup()
{
  rm -rf $buildpack_root/builds && rm -rf $buildpack_root/sources
}

# ------------------------------------------------------------------------------------------------

case "$1" in
  dependencies) buildpack_dependencies;;
  cleanup) buildpack_cleanup;;
  setup) buildpack_setup;;
  build) buildpack_build;;
  download) buildpack_download;;
  run) buildpack_dependencies && \
       buildpack_cleanup && \
       buildpack_download && \
       buildpack_build && \
       buildpack_setup;;
esac

# ------------------------------------------------------------------------------------------------
